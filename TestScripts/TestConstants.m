% TestConstants
% Kaitlin Dennison
% Stanford University 
% Winter 2019

%% File System
currDir = pwd;
addpath(genpath(currDir));
mainFldr = 'TestScripts/';
astModelFldr = 'AsteroidModels/';
ftDBloc = 'ftDBtest.mat'; 
    % .mat file containing the feature locations with the variable name 
        % ftDB: [nx3] [x y z] ACAF frame
saveWorkspace = 'wksp.mat';

%% Solar System
mu_sun = 1.3271244004193938E11; % Grav Param of Sun [km^3/s^2]
AU = 149597870.7; % AU conversion [km/AU]
G = 6.67259*10^-20; % Gravitational Constant
Reqec = rotEQUtoECL();

%% Asteroid 
ansGT = ANSGT('nSpacecraft',1);

%% UKF Params 
dr = 50; % Bounding radius for potential matches
Mah = [dr dr].^(2);
% Mah = diag([1 1 0.5].^(-2)); 
    % Make this bigger if things aren't correlating. Mahalanobis distance
    % is essentially a covariance for position. In fact, you might try
    % using the 3x3 covariance associated with the x,y,z ACI position of
    % the indv feature as generated by the UKF to get a better metric
measCov = eye(2).*dr;
Pdefault = [0.2 0 0 0.2 0 0.2].^2;
dr = 50; % Bounding radius for potential matches
Mah = [dr dr].^(2);
sigM = 0.75;
tolM = 5^2;
maxR = 1000;

%% Database Setup 
maxDBpts = 1500;                                  % max # of points in DB
timePen = 20;                                    % time penalty for point retention
numTop = 100;
rslvDist =@(r) ((r/(1e-6)-camParams(1))*norm(camParams(4:5))/camParams(1))*(1e-6); % the camera's resolvable distance
